<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.example.repository.kakeibo.KakeiboMapper">
 	
 	<!-- 家計簿一覧表示 -->
 	<select id="findAll" resultMap="kakeiboResultMap">
 		SELECT
			k.id,
			k.user_id,
			k.payment_date,
			k.expense_item_id,
			ei.expense_item_name,
			k.expenditure_amount,
			k.income_amount,
			k.settlement_id,
			s.settlement_name,
			k.used_store,
			k.remarks,
			k.insert_at,
			k.update_at
		FROM kakeibo AS k
		INNER JOIN
			expense_item as ei
		ON
			k.expense_item_id = ei.id
		LEFT JOIN
			settlement as s
		ON
			k.settlement_id = s.id
		ORDER BY
			k.payment_date DESC,
			k.update_at DESC;
 	</select>
 	
 	<!-- 家計簿1件のデータを取得(編集用) -->
 	<select id="findByKakeiboId" resultMap="kakeiboResultMap">
 		SELECT
			k.id,
			k.user_id,
			k.payment_date,
			k.expense_item_id,
			ei.expense_item_name,
			k.expenditure_amount,
			k.income_amount,
			k.settlement_id,
			s.settlement_name,
			k.used_store,
			k.remarks,
			k.insert_at,
			k.update_at
		FROM kakeibo AS k
		INNER JOIN
			expense_item as ei
		ON
			k.expense_item_id = ei.id
		LEFT JOIN
			settlement as s
		ON
			k.settlement_id = s.id
		WHERE
			k.id = #{id};
 	</select>
 	
 	<!-- 家計簿情報取得用のresultMap -->
 	<resultMap id="kakeiboResultMap" type="com.example.domain.kakeibo.Kakeibo">
 		<id property="id" column="id"/>
 		<result property="userId" column="user_id"/>
 		<result property="paymentDate" column="payment_date"/>
 		<result property="expenseItemId" column="expense_item_id"/>
 		<result property="expenditureAmount" column="expenditure_amount"/>
 		<result property="incomeAmount" column="income_amount"/>
 		<result property="settlementId" column="settlement_id"/>
 		<result property="usedStore" column="used_store"/>
 		<result property="remarks" column="remarks"/>
 		<result property="insertAt" column="insert_at"/>
 		<result property="updateAt" column="update_at"/>
 		<association property="expenseItem" resultMap="expenseItemResultMap"/>
 		<association property="settlement" resultMap="settlementResultMap"/>
 	</resultMap>
 	
 	<resultMap id="expenseItemResultMap" type="com.example.domain.kakeibo.ExpenseItem">
 		<result property="id" column="id"/>
 		<result property="expenseItemName" column="expense_item_name"/>
 	</resultMap>
 	
 	<resultMap id="settlementResultMap" type="com.example.domain.kakeibo.Settlement">
 		<result property="id" column="id"/>
 		<result property="settlementName" column="settlement_name"/>
 	</resultMap>
 	
 	
 	<!-- 家計簿新規登録 -->
 	<insert id="saveKakeibo">
 		INSERT INTO kakeibo
 			(user_id, payment_date, expense_item_id, expenditure_amount, income_amount, settlement_id, used_store, remarks)
 		VALUES
 			(#{userId}, #{paymentDate}, #{expenseItemId}, #{expenditureAmount}, #{incomeAmount}, #{settlementId}, #{usedStore}, #{remarks})
 	</insert>
 	
 	
 	<!-- 家計簿編集用 -->
 	<update id="update">
 	UPDATE kakeibo SET
 		payment_date = #{paymentDate}, expense_item_id = #{expenseItemId}, expenditure_amount = #{expenditureAmount}, income_amount = #{incomeAmount}, settlement_id = #{settlementId}, used_store = #{usedStore}, remarks = #{remarks}
 	WHERE
 		id = #{id}
 	</update>
 	
 	<!-- 収支内訳算出 -->
 	<select id="totalIncomeAndExpenditureBreakdown" resultMap="kakeiboResultMap">
 		SELECT
			ei.id as expense_item_id,
			ei.expense_item_name,
			SUM(k.expenditure_amount) AS expenditure_amount,
			SUM(k.income_amount) AS income_amount
		FROM
			expense_item AS ei
		LEFT JOIN
			kakeibo AS k
		ON
			ei.id = k.expense_item_id
		WHERE
			k.expense_item_id NOT IN(1, 2, 3)
			and TO_CHAR(k.payment_date, 'YYYY-MM') LIKE '%${yearAndMonth}%'
		GROUP BY
			ei.id,
			ei.expense_item_name
 	</select>
 	
 	<resultMap id="totalIncomeAndExpenditureBreakdownResultMap" type="com.example.domain.kakeibo.Kakeibo">
 		<result property="expenseItemId" column="expense_item_id"/>
 		<result property="totalByExpenseItem" column="total_by_expense_item"/>
 		<result property="incomeAndExpenditureBreakedownRate" column="income_and_expenditure_breakedown_rate"/>
 		<association property="expenseItem" resultMap="expenseItemResultMap"/>
 	</resultMap>
 	
 	<!-- 月別収支計算(収支内訳画面用) -->
 	<select id="monthlyBalanceCalculateOfBreakdown" resultMap="BalanceCalculationResultMap">
 		SELECT
			SUM(income_amount) AS total_income_amount,
			SUM(expenditure_amount) AS total_expenditure_amount,
			(SUM(income_amount) - SUM(expenditure_amount)) AS balance_calculation_result
		FROM kakeibo
		WHERE
			TO_CHAR(payment_date, 'YYYY-MM') LIKE '%${yearAndMonth}%'
 	</select>

 	
 	<!-- 月別集計検索 -->
 	<select id="findKakeiboByYearAndMonth" resultMap="kakeiboResultMap">
 		SELECT
			k.id,
			k.user_id,
			k.payment_date,
			k.expense_item_id,
			ei.expense_item_name,
			k.expenditure_amount,
			k.income_amount,
			k.settlement_id,
			s.settlement_name,
			k.used_store,
			k.remarks,
			k.insert_at
		FROM kakeibo AS k
		INNER JOIN
			expense_item as ei
		ON
			k.expense_item_id = ei.id
		LEFT JOIN
			settlement as s
		ON
			k.settlement_id = s.id
		<where>
			<if test="year != null and month != null">
				TO_CHAR(k.payment_date, 'YYYY-MM') LIKE '${year}-%${month}%'
			</if>
		</where>
		ORDER BY
			k.payment_date DESC,
			k.update_at DESC;
 	</select>
 	
 	
 	<!-- 月別収支計算 -->
 	<select id="monthlyBalanceCalculate" resultMap="BalanceCalculationResultMap">
 		SELECT
			SUM(income_amount) AS total_income_amount,
			SUM(expenditure_amount) AS total_expenditure_amount,
			(SUM(income_amount) - SUM(expenditure_amount)) AS balance_calculation_result
		FROM kakeibo
		<where>
			<if test="year != null and month != null">
				TO_CHAR(payment_date, 'YYYY-MM') LIKE '${year}-%${month}%'
			</if>
		</where>
 	</select>
 	
 	<resultMap id="BalanceCalculationResultMap" type="com.example.domain.kakeibo.MonthlyBalanceCalculationResult">
 		<result property="totalIncomeAmount" column="total_income_amount"/>
 		<result property="totalExpenditureAmount" column="total_expenditure_amount"/>
 		<result property="balanceCalculationResult" column="balance_calculation_result"/>
 	</resultMap>
 	
 </mapper>